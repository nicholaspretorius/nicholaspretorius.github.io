{"version":3,"sources":["webpack:///path---til-0025-6e621bad496a7c709444.js","webpack:///./.cache/json/til-0025.json"],"names":["webpackJsonp","442","module","exports","data","markdownRemark","html","frontmatter","title","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,mlEAA4nCC,aAA6+BC,MAAA,qEAA4EC,aAAgBC,KAAA","file":"path---til-0025-6e621bad496a7c709444.js","sourcesContent":["webpackJsonp([177153493226510],{\n\n/***/ 442:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<ul>\\n<li>\\n<p>Nodemailer-express-handlebars is a useful plugin for Nodemailer that allows you to use Handlebars templates in your HTML emails | <a href=\\\"https://github.com/yads/nodemailer-express-handlebars\\\">Link</a> <br/>\\nThe documentation on that page does not provide a full usage example and is really short on details. I then found this article which was incredibly helpful! | <a href=\\\"http://excellencenodejsblog.com/express-nodemailer-sending-mails/\\\">Link</a></p>\\n<pre>\\n...\\nvar hbs = require('nodemailer-express-handlebars');\\nvar options = {\\nviewEngine : {\\n    extname: '.hbs', // handlebars extension\\n    layoutsDir: 'views/email/', // location of handlebars templates\\n    defaultLayout: 'template', // name of main template\\n    partialsDir: 'views/email/', // location of your subtemplates aka. header, footer etc\\n},\\nviewPath: 'views/email',\\nextName: '.hbs'\\n};\\n...\\nmailer.use('compile', hbs(options));\\nmailer.sendMail({\\nfrom: 'test@test.com',\\nto: req.body.to,\\nsubject: req.body.subject,\\ntemplate: 'template',\\ncontext: {\\n    firstName: req.body.firstName,\\n    lastName: req.body.lastName,\\n    ...\\n}\\n}, function(error, response)...) \\n</pre>\\n</li>\\n<li>Most of my day was then spent trying to figure out how best to put Node.js, Express and its dependencies into a working app via Webpack. I have not been very successful so far... My main issue at present is that when I run Webpack I get a lot of errors that say things like: Module not found: Error: Can't resolve './decode/' etc <br/>\\nI did however, find two articles which look promising and that I will be picking for clues:\\n<br/><br/></li>\\n<li>TypeScript, Express and Node.js | <a href=\\\"http://brianflove.com/2016/11/08/typescript-2-express-node/\\\">Link</a> <br/>\\nThis is a great article, however, he uses Grunt to build his TypeScript which is not quite what I am looking for. </li>\\n<li>TypeScript, ExpressJS API with Webpack | <a href=\\\"https://medium.com/@Pierre_anthill/typescript-expressjs-api-with-webpack-4655126d884b\\\">Link</a><br/>\\nAnother great article that look to cover most of what I am looking for.</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Node.js, Nodemailer + Express Handlebars, Express + TypeScript.\"}}},\"pathContext\":{\"slug\":\"/til0025/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---til-0025-6e621bad496a7c709444.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<ul>\\n<li>\\n<p>Nodemailer-express-handlebars is a useful plugin for Nodemailer that allows you to use Handlebars templates in your HTML emails | <a href=\\\"https://github.com/yads/nodemailer-express-handlebars\\\">Link</a> <br/>\\nThe documentation on that page does not provide a full usage example and is really short on details. I then found this article which was incredibly helpful! | <a href=\\\"http://excellencenodejsblog.com/express-nodemailer-sending-mails/\\\">Link</a></p>\\n<pre>\\n...\\nvar hbs = require('nodemailer-express-handlebars');\\nvar options = {\\nviewEngine : {\\n    extname: '.hbs', // handlebars extension\\n    layoutsDir: 'views/email/', // location of handlebars templates\\n    defaultLayout: 'template', // name of main template\\n    partialsDir: 'views/email/', // location of your subtemplates aka. header, footer etc\\n},\\nviewPath: 'views/email',\\nextName: '.hbs'\\n};\\n...\\nmailer.use('compile', hbs(options));\\nmailer.sendMail({\\nfrom: 'test@test.com',\\nto: req.body.to,\\nsubject: req.body.subject,\\ntemplate: 'template',\\ncontext: {\\n    firstName: req.body.firstName,\\n    lastName: req.body.lastName,\\n    ...\\n}\\n}, function(error, response)...) \\n</pre>\\n</li>\\n<li>Most of my day was then spent trying to figure out how best to put Node.js, Express and its dependencies into a working app via Webpack. I have not been very successful so far... My main issue at present is that when I run Webpack I get a lot of errors that say things like: Module not found: Error: Can't resolve './decode/' etc <br/>\\nI did however, find two articles which look promising and that I will be picking for clues:\\n<br/><br/></li>\\n<li>TypeScript, Express and Node.js | <a href=\\\"http://brianflove.com/2016/11/08/typescript-2-express-node/\\\">Link</a> <br/>\\nThis is a great article, however, he uses Grunt to build his TypeScript which is not quite what I am looking for. </li>\\n<li>TypeScript, ExpressJS API with Webpack | <a href=\\\"https://medium.com/@Pierre_anthill/typescript-expressjs-api-with-webpack-4655126d884b\\\">Link</a><br/>\\nAnother great article that look to cover most of what I am looking for.</li>\\n</ul>\",\"frontmatter\":{\"title\":\"Node.js, Nodemailer + Express Handlebars, Express + TypeScript.\"}}},\"pathContext\":{\"slug\":\"/til0025/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/til-0025.json\n// module id = 442\n// module chunks = 177153493226510"],"sourceRoot":""}
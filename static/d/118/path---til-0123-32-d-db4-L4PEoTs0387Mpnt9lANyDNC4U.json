{"data":{"markdownRemark":{"html":"<p>As part of the Udacity React Nanodegree course, the section on Redux has students building a basic implementation of Redux. The app is a small \"Todos\" app with Redux and the UI written in plain JavaScript. From there, our rudimentary \"Redux\" implementation is supplemented with a very basic example of middleware. From there, this implementation is replaced by Redux itself with Redux middleware added. Thereafter, the UI is then re-written into React, with both the vanilla JS UI and the React UI present on the page at once. </p>\n<p>The progression of this tutorial was ingenius in that it revealed, very practically the following things: </p>\n<ul>\n<li>The building blocks and principles of Redux. </li>\n<li>The usefulness and flexibility that having state separate from UI provides. </li>\n</ul>\n<p>Having gone through the example, I was blown away by how easily the refactored React UI was able to \"plug into\" the existing Redux state management. Granted, the premise of the app is very simple, so there will likely be more complexity with a more complex app, but my intial impressions are positive and I look forward to using Redux and learning more about it in the near future. </p>\n<p><a href=\"https://github.com/nicholaspretorius/redux101\">Repo</a></p>","frontmatter":{"title":"Redux Impressions."}}},"pageContext":{"slug":"/til0123/"}}
{"data":{"markdownRemark":{"html":"<p>I recently subscribed to the <a href=\"https://www.dailycodingproblem.com/\">Daily Coding Problems</a> email newsletter. As they put it: </p>\n<blockquote>\n<p>Get exceptionally good at coding interviews by solving one problem every day.</p>\n</blockquote>\n<p>Now, I am not planning on interviewing any time soon, however, I feel that algorithms and mathematical-type programming is something I need to improve on. As a result, I thought it would be a good idea to take up the challenge! </p>\n<p>From the get go, I am a little behind. I have already received 7 emails, but I only go to doing the first one today. So much for New Year's Resolutions! </p>\n<p>I liken these coding problems to fitness drills in sport - while a sportsman or woman may be fit and be good at the sport they play without specific fitness drills of training. Chances are very good that their overall game will be much improved by doing specific drills and training that focus on individual elements of their game. This is my development version of the daily jog or push-ups. Short, limited exercises that don't take too much time, but are focused and when done repeatedly will lead to health and strength improvements! </p>\n<h4>Tests.</h4>\n<p>As part of this exercise, I am also including tests. </p>\n<ul>\n<li>Tests are <em>essential</em> to modern development.</li>\n<li>Tests provide an easy way to run the code. </li>\n<li>I want to get more familiar with writing tests <em>before</em> I write code.</li>\n</ul>\n<p>For the tests, I am using <a href=\"https://jestjs.io\">Jest</a>. Namely because Jest is easy to setup and get going and I have familiarity with Jest from using it with Node.js and Nest.js.</p>\n<h4>First Problem.</h4>\n<p>It is only in the past few years of my career that I have started to break out of the negative thought pattern that I wasn't a <em>real</em> developer. Part of that pattern remains and is somewhat rooted in the fact that while I write code that <em>works</em>. I am never quite sure if the code I write is <em>good</em>. Good is subjective in a sense, but from my perspective I mean good in the sense that: </p>\n<ol>\n<li>The code is not terrible</li>\n<li>The code follows good practice and is up to date with modern methods. </li>\n<li>The code is sensible and readable. </li>\n</ol>\n<p>For example, doing this first problem some thoughts that go through my head are: </p>\n<ul>\n<li>I know using for loops is not trendy and does not follow functional programming. As such, I started out using .map(). This then revealed a flaw in my thinking because I did not want to return a new array, I <em>only</em> wanted to iterate over the numbers and add them.</li>\n<li>From that thinking, .map was not suitable because it returns a new array and I did not want a new array. </li>\n<li>Similarly, .filter and .reduce were not suitable either. </li>\n<li>I considered forEach, however, I remembered reading somewhere that ultimately, for loops were still more performant than forEach. </li>\n</ul>\n<p>In any event, much of what I have written above might be wrong and as a result, I have some homework to do! Namely to find out: </p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Is a for loop more performant than forEach? </li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Is there a more modern ES6 construct that <em>only</em> iterates without return a new collection? </li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> I want to write a solution using modern ES6</li>\n</ul>\n<p>The repo is <a href=\"https://github.com/nicholaspretorius/dcp\">here</a>.</p>","frontmatter":{"title":"Daily Coding Problems."}}},"pageContext":{"slug":"/til0067/"}}
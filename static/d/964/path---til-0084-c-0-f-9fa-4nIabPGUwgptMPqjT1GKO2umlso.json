{"data":{"markdownRemark":{"html":"<p>In the teams I work in, I expect the follwing when it comes to bug reporting: </p>\n<ul>\n<li>Clear description of the bug</li>\n<li>Clear, defined steps to reproduce</li>\n<li>Relevant url, browser and related info which could be, but not limited to entry details, screenshots</li>\n</ul>\n<p>What I will provide once I have investigated the bug: </p>\n<ul>\n<li>Brief description of replication steps and process</li>\n<li>Relevant findings and further information</li>\n<li>Description of next steps, resolution, expectations expect</li>\n</ul>\n<p>The above should all be commented on or provided on the bug report, be it in ALM or Jira, so that: </p>\n<ol>\n<li>Anyone who wants to know the status can see what has been done, what has been found and what state the bug is in</li>\n<li>Anyeone shoudl be able to pick up where you left off without having to retrace your steps</li>\n<li>You are sharing your knowledge - several days, weeks or months down the line, you cannot rely on yourself (or anyone else) to accurately <em>remember</em> exactly what happened. The detail does not need to be exhaustive but it must be enough to be descriptive enough to ignite your recollection or to orient someone else. If possible, once the bug is resolved, provide some resolution and closure. </li>\n</ol>\n<p>Much like documentation, good bug history and knowledge should also be built up. DRY does not only apply to the code you write, but also to your personal as well as your teams collective knowledge and memory. </p>","frontmatter":{"title":"Bug Reporting."}}},"pageContext":{"slug":"/til0084/"}}
{"data":{"markdownRemark":{"html":"<p>Ionic has announced <a href=\"https://ionicframework.com/blog/announcing-ionic-react/\">Ionic React</a>! </p>\n<p>While Ionic has long been known as an \"Angular\" framework for building mobile apps using web technology, it looks as though they are expanding beyond their Angular origins. Earlier this year I started experimenting with Ionic and, coming from an Angular background, I enjoyed working with it. After having spent the past few weeks digging into the React and React Native ecosystems, I am very curious how Ionic React will fit into the overall ecosystem. Especially since the combination of React and React Native seem to have both the web and mobile bases covered. As Max Lynch writes: </p>\n<blockquote>\n<p>\"Instead of building an abstraction on top of iOS and Android native UI controls, we wanted to build something that was DOM-native, that would use the standard react-dom library and all the libraries that supported it out of the box, and the decades of existing work around the browser. When we looked at installs for react-dom compared to react-native, it was clear to us that vastly more React development was happening in the browser and on top of the DOM than on top of the native iOS or Android UI systems (16x more, in fact!). That further confirmed our belief that “web devs wanna web dev” and take advantage of their experience and existing library of functionality they’ve built on the DOM.</p>\n</blockquote>\n<blockquote>\n<p>On top of that, developers are increasingly interested in Progressive Web Apps, especially in the enterprise. PWAs are, at best, an afterthought in the React Native ecosystem (and actually, not officially supported). In contrast, Ionic Framework is one of the leading PWA solutions and has some of the best performance for PWAs in the entire web ecosystem, thanks in part to our work on our Stencil project which we use to generate highly efficient components under the hood.</p>\n</blockquote>\n<blockquote>\n<p>We also heard from a number of developers that wanted to use Ionic React in their existing React Native apps, by building more screens in their app out of a native WebView frame (using Capacitor, more on that in a bit) to move more quickly or enable traditional web developers to work in tandem with the existing native and React Native dev teams.\"</p>\n</blockquote>\n<p>By that explanation, the reason to exist seems to be Ionic's ability to leverage PWA functionality along with the promise to integrate more web developers into building out React Native apps. That certainly sounds pretty much in-line with the appeal Ionic holds for web developers looking to get into mobile. I would think that this approach would certainly widen the appeal of Ionic. </p>\n<p>What I am most intrigued by is that Ionic React comes with TypeScript baked in which, at a glance, makes Ionic React look quite familiar to someone with experience with Ionic. An Ionic team member has also posted a guide on <a href=\"https://dev.to/elylucas/adding-ionic-react-to-an-existing-react-project-4kib\">how to integrate Ionic React into an existing React project</a>. </p>\n<p>I will be going through some examples soon! </p>","frontmatter":{"title":"Ionic React."}}},"pageContext":{"slug":"/til0132/"}}
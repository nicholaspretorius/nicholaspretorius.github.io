{"data":{"markdownRemark":{"html":"<p>I have been a fan and user of the <a href=\"https://insomnia.rest/\">Insomnia REST Client</a> for quite some time. Initially, I was a regular <a href=\"https://www.getpostman.com/\">Postman</a> user, but when Postman switched from being a Chrome browser extension to a standalone app, their proxy user authentication and support was not great. (If I understand correctly, Postman used to piggyback on Chrome's proxy auth - which worked great!) As a result, and after much GitHub issue browsing, I just could not (and still cannot) get Postman to work through the corporate proxy at work. </p>\n<p>As is often the case though, one door closing leads to another door opening and I am so glad it did.</p>\n<p>Insomnia is great! </p>\n<p>I love the UI, I love the name (Finally, a REST client you'll <em>love</em>) and I love that Insomnia has actually taught me a few things I did not know, such as:</p>\n<h4>cURL</h4>\n<p>I'll admit, cURL was a little obscure to me (still is). However, ever since discovering that Insomnia allows you to quickly and easily recreate API calls by pasting the cURL into the address bar, I have become a regular user. (Special tip: When viewing the Resquest pane in your dev tools, right click on the request you are interested in and then select <code>Copy as cURL</code>. Then paste it into the Insomnia address bar.)</p>\n<p>The above, combined with my increased usage of Node.js, which has me spending more time in the terminal than ever before, and I have started to use cURL to test basic GET commands instead of Insomnia! </p>\n<p><em>Note</em>: This is only for basic GET commands, for more complex calls, I still find Insomnia far quicker and easier to setup a call.</p>\n<h4>JSON Path</h4>\n<p>Currently, I am working on a project which has some APIs which return quite a lot of data. When interrogating the data for possible bugs and root causes, I work in Insomnia or transfer browser calls to Insomnia for the following reasons: </p>\n<ol>\n<li>Seeing both request and response in one pane far surpasses having to switch between panes in the browser dev tools. </li>\n<li>Being able to quickly change values and re-submit API requests far surpasses having to redo actions in the browser. (Or type out cURL commands)</li>\n<li>(Again) The UI <em>far</em> surpasses what appears in the browser. (I love dark modes)</li>\n<li>Being able to screenshot or share cURLs is far easier in Insomnia than it is from the browser. (But only by a little...)</li>\n</ol>\n<p>Now, there is a 5th point to that list: </p>\n<p><a href=\"https://goessner.net/articles/JsonPath/\">JSON Path</a></p>\n<p>While, somewhat frustratedly, scrolling up and down through the response pane and minimising/maximising objects and arrays to get a better sense of the large data sets I was receiving, I noticed the small input bar at the very bottom right of the screen. When clicking the little <code>?</code> icon at the end the line, I discovered this: </p>\n<p><code>Use JSON Path to filter the response body. Here are some examples you might use on a book store API.</code></p>\n<ul>\n<li><code>$.store.books[*].title</code></li>\n<li><code>$.store.books[?(@.price &#x3C; 10)].title</code></li>\n<li><code>$.store.books[-1:]</code></li>\n<li><code>$.store.books.length</code></li>\n</ul>\n<p>This was <em>just</em> what I was looking for! </p>\n<p>Using JSON Path makes it so much easier to get a sense of the overall shape and quality of the data you are getting back than scanning it manually. You can very efficiently narrow down the data to particular areas of focus, with an almost JSON like query language. </p>\n<p>It strikes me, that, often times, the best software or technology, not only finds a useful place in your workflow, but also teaches or reveals things to you that you were not aware of before. I exceptional cases, the software teaches you things that are really, incredibly useful! </p>\n<p>Feature request: Smart auto-complete for JSON Path queries based on the data you have received.  </p>","frontmatter":{"title":"JSON Path."}}},"pageContext":{"slug":"/til0089/"}}
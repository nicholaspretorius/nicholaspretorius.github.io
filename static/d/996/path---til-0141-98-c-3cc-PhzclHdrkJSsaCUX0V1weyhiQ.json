{"data":{"markdownRemark":{"html":"<p>When working with Docker, it is a good idea to keep on eye on your space management. If you are building and running numerous images, containers and volumes it is quite easy to start using up a lot of space on your local machine. </p>\n<p>The following are some Docker commands I use to keep on top of what is happening with Docker: </p>\n<ul>\n<li>Show Docker disk usage: <code>docker system df</code></li>\n<li>List docker running containers: <code>docker ps</code></li>\n<li>List all Docker containers: <code>docker ps -a</code></li>\n<li>You can remove individual docker containers: <code>docker rm docker-container-id-goes-her</code></li>\n<li>List Docker images: <code>docker images</code></li>\n<li>Remove Docker image: <code>docker rmi docker-image-id-goes-here</code></li>\n<li>Remove unused, dangling, \"<none>\" Docker images: <code>docker rmi $(docker images -f \"dangling=true\" -q)</code></li>\n<li>List Docker volumes: <code>docker volume ls</code></li>\n<li>Removed unused volumes: <code>docker volume prune</code></li>\n<li>Removed all unused Docker resource: <code>docker system prune</code></li>\n</ul>\n<p>It is a good idea to remove unused volumes, images and containers regularly. If you build and re-build image a lot, it is easy to eat up disk space as Docker does not seem to re-use the same volumes. As such, I ended up with 269 unused volumes taking up an incredible amount of space on my machine! </p>\n<p>Fortunately, pruning my volumes cleaned up a lot of space that was being taken up unnecessarily. </p>","frontmatter":{"title":"Docker Housekeeping."}}},"pageContext":{"slug":"/til0141/"}}
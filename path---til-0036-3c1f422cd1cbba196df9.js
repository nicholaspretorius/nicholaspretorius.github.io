webpackJsonp([0xf5b8d026e765],{449:function(e,t){e.exports={data:{markdownRemark:{html:'<h3>Sprint 1 Retrospective</h3>\n<p>We finish our first sprint tomorrow. As explained earlier this week, we are running a 1 week sprint since we are a small team. I completed all my issues this afternoon, so I think it makes for a good time to reflect on the week. </p>\n<p>For context, our application sits on top of a third party API and application. As such we are reliant on that third party doing there part when it comes to config. As such, when doing rollouts, our tasks have a direct dependency on third party completion. </p>\n<ul>\n<li>In future, we need the third party config complete the Friday before we include that work into the sprint. Otherwise time is spent "waiting". This puts testing under pressure. For example, we only received our config this morning (Thursday). That means I had to do my bit, test and push it to both UAT and "pre-live" rapidly. This is all well and good, but it put our tester under pressure.</li>\n<li>We only scoped half my time for the week towards development, since the config and testing was estimated at 10 hours (primarily because we often run into config issues which take some time iron out). The remainder was left open in case we got access to our new market\'s setups and would require testing on my party to confirm all was in order. As a result, I pushed and worked on stories that were not in the sprint but in the backlog. </li>\n<li>Scope in some of the trickier features next sprint. We have an important few weeks coming up as the app will be setup, tested and released in 3 Arabic markets with a bi-lingual front-end as well as right-to-left layout. The team doing config that side is new to the product, so we may be in for some <em>fun</em>. </li>\n<li>Allocate time towards filling out our Confluence pages and getting our clients involved in the process in a more hands-on fashion. </li>\n<li>On the technical side, the WebJob which is setup to automatically renew the Let\'s Encrypt SSLs was generating the SSLs using a -staging flag and a "fake" certificate. I need to investigate next week and resolve it. Fortunately I was able to quickly regenerate these accordingly. </li>\n</ul>\n<p>It was a good first sprint. We hit our goals (though we underscoped slightly) and there are areas for improvement. I am excited to see how we do next week!  </p>',frontmatter:{title:"TIL 0036"}}},pathContext:{slug:"/til0036/"}}}});
//# sourceMappingURL=path---til-0036-3c1f422cd1cbba196df9.js.map